matrix-synapse:
  serverName: matrix.alexlebens.net
  publicServerName: matrix.alexlebens.net
  argoCD: true
  signingkey:
    job:
      enabled: false
  config:
    publicBaseurl: https://matrix.alexlebens.net
    reportStats: false
    enableRegistration: true
    trustedKeyServers: []
  synapse:
    strategy:
      type: Recreate
    extraVolumes:
      - name: matrix-synapse-config-secret
        secret:
          secretName: matrix-synapse-config-secret
      - name: matrix-hookshot-config-secret
        secret:
          secretName: matrix-hookshot-config-secret
    extraVolumeMounts:
      - name: matrix-synapse-config-secret
        mountPath: /synapse/config/conf.d/oidc.yaml
        subPath: oidc.yaml
        readOnly: true
      - name: matrix-synapse-config-secret
        mountPath: /synapse/config/conf.d/config.yaml
        subPath: config.yaml
        readOnly: true
      - name: matrix-hookshot-config-secret
        mountPath: /synapse/config/conf.d/hookshot-registration.yaml
        subPath: hookshot-registration.yaml
        readOnly: true
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 100m
        memory: 500Mi
  workers:
    default:
      replicaCount: 1
      strategy:
        type: Recreate
      resources:
        limits:
          cpu: 1000m
          memory: 2Gi
        requests:
          cpu: 100m
          memory: 256Mi
    generic_worker:
      enabled: true
      generic: true
      listeners: [client]
      csPaths:
        ## Sync requests
        - "/_matrix/client/(r0|v3)/sync$"
        - "/_matrix/client/(api/v1|r0|v3)/events$"
        - "/_matrix/client/(api/v1|r0|v3)/initialSync$"
        - "/_matrix/client/(api/v1|r0|v3)/rooms/[^/]+/initialSync$"

        ## Client API requests
        - "/_matrix/client/(api/v1|r0|v3|unstable)/createRoom$"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/publicRooms$"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/joined_members$"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/context/"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/members$"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/state$"
        - "/_matrix/client/v1/rooms/.*/hierarchy$"
        - "/_matrix/client/unstable/org.matrix.msc2716/rooms/.*/batch_send$"
        - "/_matrix/client/unstable/im.nheko.summary/rooms/.*/summary$"
        - "/_matrix/client/(r0|v3|unstable)/account/3pid$"
        - "/_matrix/client/(r0|v3|unstable)/account/whoami$"
        - "/_matrix/client/(r0|v3|unstable)/devices$"
        - "/_matrix/client/versions$"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/voip/turnServer$"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/event/"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/joined_rooms$"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/search$"

        ## Encryption requests
        - "/_matrix/client/(r0|v3|unstable)/keys/query$"
        - "/_matrix/client/(r0|v3|unstable)/keys/changes$"
        - "/_matrix/client/(r0|v3|unstable)/keys/claim$"
        - "/_matrix/client/(r0|v3|unstable)/room_keys/"

        ## Registration/login requests
        - "/_matrix/client/(api/v1|r0|v3|unstable)/login$"
        - "/_matrix/client/(r0|v3|unstable)/register$"
        - "/_matrix/client/v1/register/m.login.registration_token/validity$"

        ## Event sending requests
        - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/redact"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/send"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/state/"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/(join|invite|leave|ban|unban|kick)$"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/join/"
        - "/_matrix/client/(api/v1|r0|v3|unstable)/profile/"

        ## User directory search requests
        - "/_matrix/client/(r0|v3|unstable)/user_directory/search"

        ## The typing event stream
        - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/typing"

        ## The to_device event stream
        - "/_matrix/client/(r0|v3|unstable)/sendToDevice/"

        ## The account_data event stream
        - "/_matrix/client/(r0|v3|unstable)/.*/tags"
        - "/_matrix/client/(r0|v3|unstable)/.*/account_data"

        ## The receipts event stream
        - "/_matrix/client/(r0|v3|unstable)/rooms/.*/receipt"
        - "/_matrix/client/(r0|v3|unstable)/rooms/.*/read_markers"

        ## The presence event stream
        - "/_matrix/client/(api/v1|r0|v3|unstable)/presence/"

        ## OpenID Connect requests
        - ^/_matrix/client/(api/v1|r0|v3|unstable)/login/sso/redirect
        - ^/_synapse/client/pick_idp$
        - ^/_synapse/client/pick_username
        - ^/_synapse/client/new_user_consent$
        - ^/_synapse/client/sso_register$
        - ^/_synapse/client/oidc/callback$

    pusher:
      enabled: true
    appservice:
      enabled: true
      generic: true
      name: appservices
    federation_sender:
      enabled: false
    media_repository:
      enabled: true
      listeners: [media]
      csPaths:
        - "/_matrix/media/.*"
        - "/_synapse/admin/v1/purge_media_cache$"
        - "/_synapse/admin/v1/room/.*/media"
        - "/_synapse/admin/v1/user/.*/media"
        - "/_synapse/admin/v1/media/"
        - "/_synapse/admin/v1/quarantine_media/"
        - "/_synapse/admin/v1/users/.*/media$"
      paths:
        - "/_matrix/media/.*"
    user_dir:
      enabled: false
  wellknown:
    enabled: false
  postgresql:
    enabled: false
  externalPostgresql:
    host: postgresql-matrix-synapse-cluster-rw
    port: 5432
    username: app
    database: app
    existingSecret: postgresql-matrix-synapse-cluster-app
    existingSecretPasswordKey: password
  redis:
    enabled: false
  externalRedis:
    host: matrix-synapse-redis-headless
    port: 6379
    existingSecret: matrix-synapse-config-secret
    existingSecretPasswordKey: redis-password
  persistence:
    enabled: true
    storageClass: nfs-client
    accessMode: ReadWriteMany
    size: 1Gi
  volumePermissions:
    enabled: true
    uid: 666
    gid: 666
    resources:
      requests:
        memory: 128Mi
        cpu: 100m
  ingress:
    enabled: true
    className: traefik
    traefikPaths: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      cert-manager.io/cluster-issuer: letsencrypt-issuer
    includeUnderscoreSynapse: true
    includeServerName: true
    tls:
      - secretName: matrix-synapse-secret-tls
        hosts:
          - matrix.alexlebens.net
matrix-hookshot:
  ingress:
    webhook:
      enabled: true
      className: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        cert-manager.io/cluster-issuer: letsencrypt-issuer
      host: matrix.alexlebens.net
    appservice:
      enabled: false
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  hookshot:
    existingSecret: matrix-hookshot-config-secret
    existingRegistrationSecret: matrix-hookshot-config-secret
    existingPasskeySecret: matrix-hookshot-config-secret
postgres-cluster:
  cluster:
    name: cl01tl
    image:
      repository: ghcr.io/cloudnative-pg/postgresql
      tag: 16.2
    instances: 2
    storage:
      data:
        storageClass: ceph-block
        size: 10Gi
      wal:
        storageClass: ceph-block
        size: 2Gi
  bootstrap:
    recoveryEnabled: false
    recoveryIndex: 1
    endpointURL: https://nyc3.digitaloceanspaces.com
    bucket: alexlebens-net
  backup:
    backupEnabled: true
    backupIndex: 1
    endpointURL: https://nyc3.digitaloceanspaces.com
    bucket: alexlebens-net
redis:
  architecture: standalone
  auth:
    enabled: true
    existingSecret: matrix-synapse-config-secret
    existingSecretPasswordKey: redis-password
